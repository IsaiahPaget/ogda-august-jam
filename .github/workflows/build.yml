name: Build

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main


jobs:
  build_linux:
    name: Linux
    runs-on: ubuntu-latest
    steps:
      - uses: laytan/setup-odin@v2
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          release: false

      - uses: mymindstorm/setup-emsdk@v14

      - uses: actions/checkout@v4

      - name: Build hot reload
        run: ./build_hot_reload.sh

      - name: Build release
        run: ./build_release.sh

      - name: Build debug
        run: ./build_debug.sh

      - name: Build web
        run: ./build_web.sh

  build_macos:
    name: MacOS
    strategy:
      matrix:
        os: [macos-13, macos-15]
    runs-on: ${{matrix.os}}
    steps:
      - uses: laytan/setup-odin@v2
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          release: false

      - uses: mymindstorm/setup-emsdk@v14

      - uses: actions/checkout@v4

      - name: Build hot reload
        run: ./build_hot_reload.sh

      - name: Build release
        run: ./build_release.sh

      - name: Build debug
        run: ./build_debug.sh

      - name: Build web
        run: ./build_web.sh

  build_windows:
    name: Windows
    runs-on: windows-latest
    steps:
      - uses: laytan/setup-odin@v2
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          release: false

      - uses: mymindstorm/setup-emsdk@v14

      - uses: actions/checkout@v4
      - uses: ilammy/msvc-dev-cmd@v1

      - name: Build hot reload
        run: .\build_hot_reload.bat

      - name: Build release
        run: .\build_release.bat

      - name: Build debug
        run: .\build_debug.bat

      - name: Build web
        run: .\build_web.bat

  test_web:
    name: Test Web Build
    runs-on: ubuntu-latest
    needs: [build_linux]   # ensures build_linux completes first
    steps:
      - uses: actions/checkout@v4

        # Install Node.js to run Playwright and a simple HTTP server
      - uses: actions/setup-node@v4
        with:
          node-version: 20

          # Install Playwright and http-server
      - name: Install Playwright
        run: |
          npm init -y
          npm install @playwright/test http-server

        # Serve the web build directory
      - name: Start Web Server
        run: |
          npx http-server ./build/web -p 8080 &
          sleep 8  # give the server a moment to start

        # Run a browser test to catch console errors
      - name: Run Browser Test
        run: |
          npx playwright install --with-deps
          echo "
          const { test, expect } = require('@playwright/test');
          test('web build loads without errors', async ({ page }) => {
          page.on('pageerror', err => { throw err; });
          await page.goto('http://localhost:8080');
          await expect(page).toHaveTitle(/.*/);
          });
          " > web.spec.js
          npx playwright test web.spec.js
